# 1. 定义整个流水线的“工序”顺序
# 这里规定了必须先完成所有 build 阶段的任务，才能开始 deploy 阶段的任务
stages:
  - build
  - deploy

# ----------------------------------------------------------------

# 2. 定义第一个任务，并分配到 build 工序
build_frontend:
  stage: build
  image: node:22
  script:
    - echo "--- Building frontend ---"
    - cd frontend/realtime-monitor-fronted
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/realtime-monitor-fronted/dist/
  rules:
    - if: '$CI_COMMIT_BRANCH == "hh_branch"'

# ----------------------------------------------------------------

# 3. 定义第二个任务，并分配到 deploy 工序
# 您刚才引用的，就是下面这部分代码
deploy_to_server:
  stage: deploy
  image: alpine:latest
  before_script:
    - 'apk update && apk add openssh-client sshpass rsync'
    - 'mkdir -p ~/.ssh && chmod 700 ~/.ssh'
    - 'echo "Host * StrictHostKeyChecking no" > ~/.ssh/config'
  script:
    - # ...部署脚本...
  rules:
    - if: '$CI_COMMIT_BRANCH == "hh_branch"'